---
const {
  title,
  text,
  direction,
  link,
  linkText,
  theme,
  image,
  imageType,
  backgroundBoxColor,
} = Astro.props;

const boxBorderColor = backgroundBoxColor || '#f7f7f9';
---

<div
  class="display-card w-full py-10 relative my-14"
  class:list={[theme, direction]}
>
  <div class="background-box"></div>
  <div
    class="relative sm:flex sm:gap-5"
    class:list={[direction === 'right' ? 'flex-row-reverse' : '']}
  >
    <div class="w-full">
      <a href={link}>
        <h3 class="text-3xl font-bold mb-5 hover:underline">{title}</h3>
      </a>
      <p>{text}</p>
      {
        link && (
          <div class="relative mt-5">
            <a href={link} class="card-link inline-block relative px-5 py-3">
              <span class="relative z-10 font-bold">{linkText}</span>
            </a>
          </div>
        )
      }
    </div>
    {
      image && (
        <div class="w-full sm:w-80">
          <div class="image-container w-full overflow-hidden rounded-xl">
            <div class="w-full sm:w-80 h-60 mt-10 sm:mt-0 bg-black">
              <img
                class="card-image w-full h-full"
                class:list={[
                  imageType === 'contain' ? 'object-contain' : 'object-cover',
                ]}
                src={image}
                alt=""
              />
            </div>
          </div>
        </div>
      )
    }
  </div>
  <div class="sparkles-container">
    <span class="sparkle"></span>
    <span class="sparkle"></span>
    <span class="sparkle"></span>
  </div>
</div>

<style lang="scss" define:vars={{ boxBorderColor }}>
  .display-card {
    h3,
    p {
      opacity: 0;
    }

    .background-box {
      opacity: 0;
    }

    .image-container {
      width: 0;
      transition: 500ms width cubic-bezier(0.215, 0.61, 0.355, 1);
    }

    &.active {
      .background-box {
        animation: BoxRise 1000ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;
      }

      h3,
      p {
        animation: TextRise 500ms cubic-bezier(0.215, 0.61, 0.355, 1) forwards;
        animation-delay: 250ms;
      }

      p {
        animation-delay: 500ms;
      }

      .image-container {
        width: 100%;
      }

      .sparkle {
        border-radius: 3px;
        animation: SparkleOne 1000ms cubic-bezier(0.215, 0.61, 0.355, 1) 1000ms
          forwards;

        &:nth-child(2) {
          border-radius: 4px;
          animation: SparkleTwo 1200ms cubic-bezier(0.215, 0.61, 0.355, 1)
            1000ms forwards;
        }
        &:nth-child(3) {
          border-radius: 2px;
          animation: SparkleThree 1500ms cubic-bezier(0.215, 0.61, 0.355, 1)
            1000ms forwards;
        }
      }

      &.left {
        .sparkles-container {
          right: auto;
          left: 5%;
        }
      }
    }

    &.green {
      .sparkle {
        background-color: #e86a92;
      }
    }

    &.red {
      .sparkle {
        background-color: #fff586;
      }
    }
  }

  .background-box {
    width: 90%;
    height: 100%;
    position: absolute;
    top: 0;
    left: 5%;
    border: 16px solid var(--boxBorderColor);
    border-radius: 2em;
  }

  .card-link {
    background-color: #41e2ba;
    transition: color 250ms cubic-bezier(0.215, 0.61, 0.355, 1);
    border-radius: 1em;
    overflow: hidden;

    &::after {
      content: '';
      width: 0;
      height: 100%;
      position: absolute;
      top: 0;
      right: 0;
      left: auto;
      transition: width 250ms cubic-bezier(0.215, 0.61, 0.355, 1);
      background-color: #000;
    }

    &:hover {
      color: #fff;

      &::after {
        width: 100%;
        left: 0;
        right: auto;
      }
    }
  }

  .sparkles-container {
    position: absolute;
    width: 100px;
    height: 100px;
    bottom: -50px;
    right: 0;

    .sparkle {
      position: absolute;
      display: inline-block;
      width: 10px;
      height: 10px;
      left: 10px;
      top: 20px;
      background-color: #41e2ba;
      opacity: 0;

      &:nth-child(2) {
        width: 16px;
        height: 16px;
        left: 45px;
        top: 50px;
      }

      &:nth-child(3) {
        width: 8px;
        height: 8px;
        left: auto;
        right: 10px;
        top: 30px;
      }
    }
  }

  @keyframes SparkleOne {
    from {
      opacity: 0;
      transform: translateY(50px) rotate(-2deg);
    }
    to {
      opacity: 1;
      transform: translateY(0) rotate(-45deg);
    }
  }

  @keyframes SparkleTwo {
    from {
      opacity: 0;
      transform: translateY(80px) rotate(-45deg);
    }
    to {
      opacity: 1;
      transform: translateY(0) rotate(-125deg);
    }
  }

  @keyframes SparkleThree {
    from {
      opacity: 0;
      transform: translateY(100px) rotate(-10deg);
    }
    to {
      opacity: 1;
      transform: translateY(0) rotate(-75deg);
    }
  }

  @keyframes BoxRise {
    from {
      opacity: 0;
      transform: translateY(50px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  @keyframes TextRise {
    from {
      opacity: 0;
      transform: translateY(50px) skew(20deg);
    }
    to {
      opacity: 1;
      transform: translateY(0) skew(0);
    }
  }
</style>
